@{
    Layout = null;
}

<style>
    .form-group.col-md-6 {
        width: 250px;
    }

    #Address {
        resize: vertical;
    }

    :-ms-fullscreen, .e-dialog {
        max-width: 552px;
    }

    @@media only screen and (max-width: 991px) {
        .e-dialog.e-control.e-popup {
            min-width: 300px !important;
        }
    }

    @@media only screen and (min-width: 992px) {
        .e-dialog.e-control.e-popup {
            min-width: 550px !important;
            min-height: 415px;
        }

        .e-bigger .e-dialog.e-control.e-popup,
        .e-bigger .e-dialog.e-control.e-popup {
            min-height: 496px;
        }
    }

    e-dlg-header {
        display: none;
    }
</style>
<script src="~/scripts/ej2.min.js"></script>
<script>



    function actionBegin(args) {
        console.log(args.requestType);
        var grid = this;
        if (args.requestType === 'save') {
            args.cancel = true;
            var passwordVal = $("#Password").val();
            var passwordConfirmVal = $("#passwordConfirm").val();
             if (passwordVal != passwordConfirmVal) {
                    $("#Password-info").show();
                    $("#Password-info").text("Password mismatch");
                    $("#PasswordConfirmation-info").show();
                    $("#PasswordConfirmation-info").text("Password mismatch");
                } else {
                    $("#Password-info").hide();
                    $("#PasswordConfirmation-info").hide();
                 if (args.data.isNew == "true") {
                     $.post('/Dashboard/AccountCreate', {
                         Username: args.data.Username,
                         Password: args.data.Password,
                         RoleName: args.data.RoleName

                     }).done(function (data) {
                         if (data.success == false) {

                             $("#Username-info").show();
                             $("#Username-info").text(data.responseText);

                         } else {
                             grid.dataSource.push(args.data);
                             args.dialog.close();
                             grid.refresh();
                         }
                     });
                 } else {
                     $.post('/Dashboard/AccountUpdate', {
                         Id : args.data.Id,
                         Username: args.data.Username,
                         Password: args.data.Password,
                         RoleName: args.data.RoleName

                     }).done(function (data) {
                         if (data.success == false) {

                             $("#Username-info").show();
                             $("#Username-info").text(data.responseText);

                         } else {
                             var index = grid.getSelectedRowIndexes()[0];
                             grid.editModule.updateRow(index, args.data);
                             args.dialog.close();
                             grid.refresh();
                         }
                     })
                 }



            }
        }
    }
    function actionComplete(args) {

        if (args.requestType == "delete") {
            $.post('/Dashboard/AccountDelete', {
                id: args.data[0].Id
            }).done(function (data) {

            });
        };

        if (args.requestType === 'save') {


        }


        if (args.requestType === 'beginEdit' || args.requestType === 'add') {
            let spinner = ej.popups.createSpinner({ target: args.dialog.element });
            ej.popups.showSpinner(args.dialog.element);

            if (args.requestType === 'beginEdit') {
                document.getElementById("grid_dialogEdit_wrapper_title").innerHTML = "Detail for " + args.rowData.EventName;
                var ajax = new ej.base.Ajax({
                    url: "@Url.Action("EditAccountPartial","Dashboard")", //render the partial view
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ value: args.rowData })
                });
                ajax.send().then(function (data) {
                    appendElement(data, args.form); //Render the edit form with selected record
                    ej.popups.hideSpinner(args.dialog.element);
                }).catch(function (xhr) {
                    console.log(xhr);
                    ej.popups.hideSpinner(args.dialog.element);
                });
            }
            if (args.requestType === 'add') {
                var ajax = new ej.base.Ajax({
                    url: "@Url.Action("AddAccountPartial","Dashboard")", //render the partial view
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ value: args.rowData })
                });
                ajax.send().then(function (data) {
                    appendElement(data, args.form); //Render the edit form with selected record
                    $("#revealPasswordButton").on('click',function() {
                        var pwd = $("#Password");
                        if (pwd.attr('type') === 'password') {
                            pwd.attr('type', 'text');
                        } else {
                            pwd.attr('type', 'password');
                        }
                    });
                    $("#revealConfirmationPasswordButton").on('click',function() {
                        var pwd = $("#passwordConfirm");
                        if (pwd.attr('type') === 'password') {
                            pwd.attr('type', 'text');
                        } else {
                            pwd.attr('type', 'password');
                        }
                    });
                    ej.popups.hideSpinner(args.dialog.element);


                }).catch(function (xhr) {
                    console.log(xhr);
                    ej.popups.hideSpinner(args.dialog.element);
                });
            }

        }
}

function appendElement(elementString, form) {
    form.querySelector("#dialogTemp").innerHTML = elementString;
    var script = document.createElement('script');
    script.type = "text/javascript";
    var serverScript = form.querySelector("#dialogTemp").querySelector('script');
    script.textContent = serverScript.innerHTML;
    document.head.appendChild(script);
    serverScript.remove();
 }

function toolbarClick(args) {
    var gridObj = document.getElementById("grid").ej2_instances[0];
    if (args.item.id === 'grid_excelexport') {
        gridObj.excelExport({
                fileName : "Accounts.xlsx"
            });
    }
}
</script>






<div class='exp-content-container'>
    <div>
        <h1 class="page-title"> Accounts </h1>
    </div>
    <div>
        <div class="col-md-12 margin-top col-lg-12">
            <div class="expense-grid-container">

                <ejs-grid id="grid" allowExcelExport="true" actionBegin="actionBegin" toolbarClick="toolbarClick" allowFiltering="true" dataSource="ViewBag.datasource" allowSorting="true" actionComplete="actionComplete" allowSelection="true" width="100%" height="100%" allowPaging="true" allowTextWrap="false" toolbar="@(new List<string>() { "Add", "Edit", "Delete", "ExcelExport"})">
                    <e-grid-editSettings allowAdding="true" allowEditing="true" allowDeleting="true" mode="Dialog" template='#dialogtemplate'></e-grid-editSettings>
                    <e-grid-pagesettings pageSize="11"></e-grid-pagesettings>
                    <e-grid-columns>
                        <e-grid-column field="Id" isPrimaryKey="true" headerText="ID"></e-grid-column>
                        <e-grid-column field="Username" type="string" headerText="Username"></e-grid-column>
                        <e-grid-column field="RoleName" headerText="RoleName"></e-grid-column>
                    </e-grid-columns>
                </ejs-grid>
                <ejs-scripts></ejs-scripts>
            </div>
        </div>
    </div>
</div>

<script id='dialogtemplate' type="text/x-template">
    <div id="dialogTemp">
    </div>
</script>

